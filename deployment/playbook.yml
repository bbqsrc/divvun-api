---
- name: configure the divvun api server
  hosts: all
  vars:
    sudo_user: ubuntu
    api_server_user: api
    domain: api-giellalt.uit.no
    env_file_path: ../.env
    admin_email: admin@example.com
  remote_user: "{{ sudo_user }}"
  pre_tasks:
    - name: add certbot repo
      become: true
      remote_user: "{{ sudo_user }}"
      apt_repository:
        repo: ppa:certbot/certbot
    - name: setup apertium packages
      shell: curl https://apertium.projectjj.com/apt/install-nightly.sh -sSf | bash
      become: true
      remote_user: "{{ sudo_user }}"
      args:
        warn: no
    - name: add apt key for nodesource
      become: true
      remote_user: "{{ sudo_user }}"
      apt_key: 
        url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
    - name: add repo for nodesource
      become: true
      remote_user: "{{ sudo_user }}"
      apt_repository:
            repo: 'deb https://deb.nodesource.com/node_10.x {{ ansible_distribution_release }} main' 
            update_cache: yes
    - name: install necessary apt packages
      become: true
      remote_user: "{{ sudo_user }}"
      apt:
        update_cache: yes
        name: "{{ packages }}"
      vars:
        packages:
          - nodejs
          - curl
          - software-properties-common
          - build-essential
          - pkg-config
          - libssl-dev
          - divvun-gramcheck
          - git
          - nginx
          - certbot
          - python-certbot-nginx
    - name: install rustup and setup the nightly rust toolchain
      shell: curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain nightly
      remote_user: "{{ api_server_user }}"
      args:
        chdir: "/home/{{ api_server_user }}/"
        warn: no
        creates: "/home/{{ api_server_user }}/.cargo/bin/cargo"
    - name: make sure http is allowed
      shell: ufw allow http
      become: true
      remote_user: "{{ sudo_user }}"
      when: ansible_distribution == 'Ubuntu'
    - name: make sure https is allowed
      shell: ufw allow https
      become: true
      remote_user: "{{ sudo_user }}"
      when: ansible_distribution == 'Ubuntu'
  tasks:
    - name: clone msoffice addin repo
      remote_user: "{{ sudo_user }}"
      git:
        repo: https://github.com/divvun/divvun-gramcheck-web.git
        version: develop
        dest: "/home/{{ sudo_user }}/grammcheck"
        force: yes
    - name: clone divvun api repository
      remote_user: "{{ api_server_user }}"
      git:
        repo: https://github.com/divvun/divvun-api.git
        version: master
        dest: "/home/{{ api_server_user }}/divvun-api"
    - name: copy production env file
      remote_user: "{{ api_server_user }}"
      copy:
        src: "{{ env_file_path }}"
        dest: "/home/{{ api_server_user }}/divvun-api/.env"
    - name: install msoffice addin dependencies
      shell: npm install
      args:
        chdir: /home/{{ sudo_user }}/grammcheck/msoffice
    - name: build msoffice addin
      shell: npm run build
      args:
        chdir: /home/{{ sudo_user }}/grammcheck/msoffice
    - name: delete old static hosting folder
      become: true
      remote_user: "{{ sudo_user }}"
      file:
        path: /var/www/html/msoffice
        state: absent
    - name: create static hosting folder
      become: true
      remote_user: "{{ sudo_user }}"
      file:
        path: /var/www/html/msoffice
        state: directory
    - name: copy msoffice addin files
      become: true
      remote_user: "{{ sudo_user }}"
      shell: mv /home/{{ sudo_user }}/grammcheck/msoffice/dist/* /var/www/html/msoffice/
    - name: build the release version of the api server
      remote_user: "{{ api_server_user }}"
      shell: /home/{{ api_server_user }}/.cargo/bin/cargo build --release
      args:
        chdir: "/home/{{ api_server_user }}/divvun-api"
    - name: create directory for grammar checker data files
      remote_user: "{{ api_server_user }}"
      file:
        path: "/home/{{ api_server_user }}/.local/share/api-giellalt/grammar/"
        state: directory
    - name: create directory for spellchecker data files
      remote_user: "{{ api_server_user }}"
      file:
        path: "/home/{{ api_server_user }}/.local/share/api-giellalt/spelling/"
        state: directory
    - name: set systemd service file
      become: true
      remote_user: "{{ sudo_user }}"
      template:
        src: systemd-service.j2
        dest: /etc/systemd/system/divvun-api.service
    - name: enable divvun-api systemd service and restart it
      become: true
      remote_user: "{{ sudo_user }}"
      systemd:
        name: divvun-api
        enabled: yes
        state: restarted
    - name: add nginx site config
      become: true
      remote_user: "{{ sudo_user }}"
      template:
        src: nginx-site.j2
        dest: /etc/nginx/sites-available/divvun-api
        force: no
    - name: link nginx site config
      become: true
      remote_user: "{{ sudo_user }}"
      file:
        src: /etc/nginx/sites-available/divvun-api
        dest: /etc/nginx/sites-enabled/divvun-api
        state: link
    - name: enable nginx systemd service and restart it
      become: true
      remote_user: "{{ sudo_user }}"
      systemd:
        name: nginx
        enabled: yes
        state: restarted
    - name: run certbot
      become: true
      remote_user: "{{ sudo_user }}"
      shell: "certbot --nginx -n --agree-tos --email {{ admin_email }} -d {{ domain }}"
    - name: setup cert renewal
      become: true
      remote_user: "{{ sudo_user }}"
      shell: certbot renew --dry-run
